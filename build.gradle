plugins {
    id 'java'
    id("com.gradleup.shadow") version "9.0.0-beta10"
}

group = 'me.poxel'
version = '1.0-SNAPSHOT'

shadowJar {
    relocate("dev.triumphteam.gui", "me.poxel.punishplugin.gui")
    relocate("co.aikar.commands", "me.poxel.punishplugin.acf")
    relocate("co.aikar.locales", "me.poxel.punishplugin.locales")

    destinationDirectory = file("/home/conch/MCServer/Server/plugins")
}

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = System.getProperty("java.home") + "/bin/javac"
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")

    implementation("dev.triumphteam:triumph-gui:3.1.11")
    implementation("co.aikar:acf-paper:0.5.1-SNAPSHOT")

    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
}

jar {
    enabled = false
}

def targetJavaVersion = 21
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
    targetCompatibility = JavaVersion.toVersion(targetJavaVersion)
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
